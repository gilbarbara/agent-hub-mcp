description = "Send a message to another agent in the hub"
prompt = """
Send a message to a specific agent or broadcast to all agents in the hub.

I'll parse your request and send an appropriately formatted message. You can provide the recipient and message content as arguments, or I'll ask for details.

**Usage Examples:**
- `/hub:send-message nano "Can you help me with API integration?"`
- `/hub:send-message super-agent "I've completed the GitHub analysis implementation"`
- `/hub:send-message all "New feature deployed - shared context updated"`

## Message Processing

I'll handle your message by:

### 1. **Parse Recipients**
- **Specific agent**: `nano`, `super-agent`, etc.
- **Broadcast**: `all` - sends to all registered agents
- **Auto-suggest**: If agent ID is unclear, I'll show available agents

### 2. **Determine Message Type**
Based on content, I'll categorize as:
- **📋 Context**: Sharing information or status updates
- **🎯 Task**: Requesting specific work or assignments
- **❓ Question**: Asking for help or clarification
- **✅ Completion**: Reporting finished work
- **⚠️ Error**: Reporting issues or problems

### 3. **Send Message**
⏺ agent-hub - send_message (MCP)(
  from: current agent ID,
  to: recipient agent ID,
  type: detected message type,
  content: your message,
  priority: normal/urgent based on content,
  metadata: relevant tags and context
)

### 4. **Confirmation**
After sending, I'll confirm:
- **✅ Message sent** to recipient(s)
- **📬 Delivery status** and message ID
- **🔔 Notification** sent to recipient agent(s)
- **💡 Next steps** - suggest using `/hub:check-messages` to see responses

## Advanced Options

For complex messages, I can include:
- **Code snippets** and technical details
- **API endpoints** and integration specs
- **Architecture patterns** and implementation guides
- **Metadata tags** for better organization
- **Thread references** to continue conversations

Example technical message:
```
/hub:send-message backend-dev "API endpoint ready: https://api.example.com/v1/analyze
- Method: POST
- Format: {task: 'analysis', data: payload}
- WebSocket updates available
- Full docs in shared context under 'api-specs'"
```

Arguments: {{args}}
"""
